services:
    php:
        container_name: livro_teste
        image: server-livro-api
        build:
            args:
                user: livro
                uid: 1000
            context: docker-compose/docker/8.3
            dockerfile: Dockerfile
        volumes:
            - ./:/var/www
            - ./docker/php/config/extensions.ini:/usr/local/etc/php/conf.d/extensions.ini
        ports:
            - 80:80
        working_dir: /var/www/
        networks:
            - network-livroapi
    nginx:
        container_name: serve-nginx
        image: nginx:latest
        volumes:
            - ./:/var/www
            - ./docker-compose/nginx/default.conf:/etc/nginx/conf.d/default.conf
        ports:
            - 8081:80
        depends_on:
            - php
        networks:
            - network-livroapi
    db:
        container_name: mysql8
        image: mysql:8.0
        command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        environment:
            MYSQL_DATABASE: livro_db
            MYSQL_USER: livro
            MYSQL_PASSWORD: livro
            MYSQL_ROOT_PASSWORD: root
            MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        ports:
            - '3306:3306'
        volumes:
            - './docker-compose/mysql/sql:/docker-entrypoint-initdb.d'
            - './docker-compose/mysql/data:/var/lib/mysql'
            - './docker-compose/mysql/my.cnf:/etc/mysql/conf.d/my.cnf'
        networks:
            - network-livroapi
#    jasperserver:
#        image: retriever/jasperserver:7.5.0
#        container_name: jasperserver
#        ports:
#            - "8080:8080"
#        environment:
#            - DB_TYPE=mysql
#            - DB_HOST=mysql8
#            - DB_PORT=3306
#            - DB_USER=livro
#            - DB_PASSWORD=livro
#        volumes:
#            # Relative path on the host/volume on container
#            - ./docker-compose/jasperserver:/jasperserver-import
#        depends_on:
#            - db
#        deploy:
#            mode: replicated
#            replicas: 1
#            restart_policy:
#                condition: on-failure
#                delay: 10s
#                max_attempts: 3
#                window: 120s
#    composer:
#        image: composer:1.9
#        #command: ["composer", "install"]
#        command: [ "composer", "update" ]
#        volumes:
#            - ./:/app
networks:
    network-livroapi:
        driver: bridge
